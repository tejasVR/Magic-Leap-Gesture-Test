<?xml version="1.0"?>
<doc>
    <assembly>
        <name>obj/Release/SensoryWareUnity</name>
    </assembly>
    <members>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.InvalidInstanceException">
            <summary>
            Simple custom exception for instance error checking
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.InvalidInstanceException.#ctor(System.String)">
            <summary>
            Constructor to create an InvalidInstanceException with a message.
            </summary>
            <param name="message">Message to provide in the exception</param>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLAPISingleton`1">
            <summary>
            MLAPISingleton class contains a template for singleton APIs
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLAPISingleton`1._instance">
            <summary>
            Singleton object instance.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLAPISingleton`1.Instance">
            <summary>
            Returns the singleton object instance.
            </summary>
            <returns>The singleton object instance.</returns>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLAPISingleton`1.IsStarted">
            <summary>
            Determine if the API was started successfully
            </summary>
            <returns> Returns false if no instance exists</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLAPISingleton`1.IsValidInstance">
            <summary>
            Utility function returns true is the instance exists
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLAPISingleton`1.CheckValidInstance">
            <summary>
            Utility function checks for valid instance and throws an execption if not found
            <param name="name">The name of the class that should have an instance.</param><throw> UnityEngine.Experimental.XR.MagicLeap.InvalidInstanceException </throw></summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLAPISingleton`1.BaseStart">
            <summary>
            Utility function set up instance and tracks successfull _startCount
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLAPISingleton`1.Stop">
            <summary>
            Stop the API
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLAPISingleton`1.Finalize">
            <summary>
            MLAPISingleton finalizer used to ensure we dispose data correctly.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLAPISingleton`1.StopAPI">
            <summary>
            Decrement API instance count and cleanup if this is the last one.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLAPISingleton`1.StartAPI">
            <summary>
            Do API specific creation/initialization of ML resources for this API
            such as create trackers.
            </summary>
            <returns>true if API was started sucessfully, false if not </returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLAPISingleton`1.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory
            <param name="isSafeToAccessManagedObjects">Boolean that tells if it is safe to clear managed memory</param></summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLAPISingleton`1.Update(System.Single,System.IntPtr)">
            <summary>
            Update function registered with MagicLeapDevice to do API specific per frame work.
            <param name="timeDelta">The time in seconds it took to complete the last frame.</param><param name="perceptionSnapshot">The current perception shapshot</param></summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLCamera">
            <summary>
            MLCamera class exposes static functions to query camera related
            functions. Most functions are currently a direct pass through functions to the
            native C-API functions and incur no overhead.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.#ctor">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCamera._queuedActions">
            <summary />
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnDeviceAvailable">
            <summary>Camera status callback, device available.</summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnDeviceUnavailable">
            <summary>Camera status callback, device unavailable.</summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnDeviceOpened">
            <summary>Camera status callback, device opened.</summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnDeviceClosed">
            <summary>Camera status callback, device closed.</summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnDeviceDisconnected">
            <summary>Camera status callback, device disconnected.</summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnDeviceError">
            <summary>Camera status callback, device error.</summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnCaptureStarted">
            <summary>Camera capture callback, capture started.</summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnCaptureFailed">
            <summary>Camera capture callback, capture failed.</summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnCaptureBufferLost">
            <summary>Camera capture callback, capture buffer lost.</summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnCaptureProgressed">
            <summary>Camera capture callback, capture progressed.</summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnCaptureCompleted">
            <summary>Camera capture callback, capture completed.</summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnRawImageAvailable">
            <summary>Camera capture callback, capture raw image available.</summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.QueueCallback(System.Action)">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.Finalize">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.Dispose">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.Dispose(System.Boolean)">
            <summary>
            Cleans up unmanaged memory.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.Update(System.Single,System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.Connect">
            <summary>
            Connect to camera resource and register callbacks.
            Only one connection to the camera resource is supported at a time.
            </summary>
            <returns>True on success, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.Disconnect">
            <summary>
            Disconnect from camera resource and unregister callbacks.
            </summary>
            <returns>True on success, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.DisconnectNative">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.CaptureImage(System.String)">
            <summary>
            Captures an image from the camera and writes a jpeg to the specified path.
            </summary>
            <param name="filePath">Path to write the captured image.</param>
            <returns>True on success, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.CaptureRawImageAsync">
            <summary>
            Initiates a raw image capture request.  Register to OnRawImageAvailable event to get result.
            </summary>
            <returns>True on success, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.StartVideoCapture(System.String)">
            <summary>
            Starts capturing a video to write as an MP4 to the specified path.
            </summary>
            <param name="filePath">Path to write the video.</param>
            <returns>True on success, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.StopVideoCapture">
            <summary>
            Stops capturing a video and write as an MP4 to the path specified with StartVideoCapture().
            </summary>
            <returns>True on success, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.GetErrorCode">
            <summary>
            Returns the most recent error code.
            </summary>
            <returns>Most recent MLCameraError.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnDeviceAvailableCallback(System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnDeviceUnavailableCallback(System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnDeviceOpenedCallback(System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnDeviceClosedCallback(System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnDeviceDisconnectedCallback(System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnDeviceErrorCallback(UnityEngine.Experimental.XR.MagicLeap.MLCameraError,System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnCaptureStartedCallback(UnityEngine.Experimental.XR.MagicLeap.MLCameraResultExtras@,System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnCaptureFailedCallback(UnityEngine.Experimental.XR.MagicLeap.MLCameraResultExtras@,System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnCaptureBufferLostCallback(UnityEngine.Experimental.XR.MagicLeap.MLCameraResultExtras@,System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnCaptureProgressedCallback(System.UInt64,UnityEngine.Experimental.XR.MagicLeap.MLCameraResultExtras@,System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnCaptureCompletedCallback(System.UInt64,UnityEngine.Experimental.XR.MagicLeap.MLCameraResultExtras@,System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLCamera.OnImageBufferAvailableCallback(UnityEngine.Experimental.XR.MagicLeap.MLCameraOutput@,System.IntPtr)">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLDispatcher">
            <summary>
            This interface is to let an application query the platform to handle things
            that the app itself cannot or wants someone else to handle.
            For example, if an application comes across a schema tag that it doesn't know
            what to do with, it can query the patform to see if some other application might.
            This can be useful for handling http://, https:// or other customSchema://&lt;arg1&gt;/&lt;arg2&gt;
            Apart from handling schema tags in URIs, this interface can also be used
            to query the platform to handle a type of file based on file-extension or mime-type
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLDispatcher.TryOpenAppropriateApplication(System.String)">
            <summary>
            Try to open the application that is registered to support the given URI.
            </summary>
            <param name="uri"> The URI to pass into the dispatch service.</param>
            <returns>Resulting error code enum relaying the state of the attempt to open the application.</returns>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLEye">
            <summary>
            Class used to respresent a single eye.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLEye.#ctor(UnityEngine.Experimental.XR.MagicLeap.MLEye.EyeType,MagicLeapInternal.EyeApiNativeBindings.MLEyeTrackingStaticData@)">
            <summary>
            Constructor to initialize this class based on the desired eye type.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLEye.EyeType">
            <summary>
            Enumeration to specify which eye.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLEye.EyeType.Left">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLEye.EyeType.Right">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLEye.m_CenterCoordinateFrame">
            <summary>
            MagicLeap coordinate frame information for this eye's center.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLEye._transform">
            <summary>
            Generic magicleap transform used to query data from native library.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLEye.Type">
            <summary>
            Return this class' eye type.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLEye.Center">
            <summary>
            Return eye center.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLEye.IsBlinking">
            <summary>
            Return true if eye is inside a blink.
            Set to false before initial update.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLEye.CenterConfidence">
            <summary>
            Return confidence value for eye center. Will be 0 if
            no eye detected - when not wearing the device or closed eye.
            Initial value is set to 0 before the first update.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLEye.Update(System.IntPtr,System.Single,System.Boolean)">
            <summary>
            Update call used to get the latest data for this eye from a perception snapshot and information sent from MLEyes current State.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLEyes">
            <summary>
            MLEyes class contains all Eye tracking data for both left and right eyes.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLEyes.#ctor">
            <summary>
            MLEyes constructor.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLEyes._rightEye">
            <summary>
            Right eye class used to get right eye specific data.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLEyes._leftEye">
            <summary>
            Left eye class used to get right eye specific data.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLEyes._nativeTracker">
            <summary>
            MagicLeap native eye tracker.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLEyes._staticData">
            <summary>
            MagicLeap eye tracker static data.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLEyes._state">
            <summary>
            MagicLeap eye tracker state data.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLEyes._transform">
            <summary>
            Generic magicleap transform used to query data from native library.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLEyes._fixationPoint">
            <summary>
            Fixation point.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLEyes.LeftEye">
            <summary>
            Left eye class used to get left eye specific data.
            </summary>
            <returns> Returns null if no MLEyes instance exists </returns>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLEyes.RightEye">
            <summary>
            Right eye class used to get right eye specific data.
            </summary>
            <returns> Returns null if no MLEyes instance exists </returns>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLEyes.FixationConfidence">
            <summary>
            A quality metric to indicate how accurate the gaze will be..
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLEyes.IsCalibrationComplete">
            <summary>
            Has eye calibration been run.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLEyes.FixationPoint">
            <summary>
            Fixation point.
            </summary>
            <returns> Returns Vector3.zero if no MLEyes instance exists </returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLEyes.CreateInstance">
            <summary>
            static instance of the MLEyes class
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLEyes.Start">
            <summary>
            Starts the Eyes API.
            </summary>
            <returns>true if the API is successfully initialized and false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLEyes.StartAPI">
            <summary>
            Starts the eye object requests, Must be called to start receiving eye tracker data from
            the underlying system
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLEyes.InitNativeTracker">
            <summary>
            Create native eye tracker.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLEyes.InitEyes">
            <summary>
            Initialize eye data by pulling native tracker data and the individual eye classes.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLEyes.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLEyes.DestroyNativeTracker">
            <summary>
            Destroy the native tracker.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLEyes.Update(System.Single,System.IntPtr)">
            <summary>
            Update all eye data.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLEyes.UpdateState">
            <summary>
            Update eye tracker state.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLEyes.UpdateFixationPoint(System.IntPtr)">
            <summary>
            Update fixation point data.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLGestureManager">
            <summary>
            Manages what gestures are enabled and exposes gesture events.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLGestureManager.#ctor(System.UInt64,UnityEngine.Experimental.XR.MagicLeap.MLHand,UnityEngine.Experimental.XR.MagicLeap.MLHand)">
            <summary />
            <param name="nativeTrackerHandle">Native hand tracker handle.</param>
            <param name="leftHand">Left hand to which MLGestureManager will subscribe for events.</param>
            <param name="rightHand">Right hand to which MLGestureManager will subscribe for events.</param>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLGestureManager.OnStaticGestureBegin">
            <summary>
            Event is raised whenever a static gesture type starts being recognized.
            </summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLGestureManager.OnStaticGestureEnd">
            <summary>
            Event is raised whenever a static gesture type stops being recognized.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLGestureManager.EnabledStaticGestures">
            <summary>
            Gets the currently enabled static gestures.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLGestureManager.KeypointsFilterLevel">
            <summary>
            Gets the keypoints filter level
            </summary>
            <returns>The filter level.</returns>
            <remarks>
            WARNING: All gesture filter functionality is blocked on AD-520
            </remarks>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLGestureManager.PoseFilterLevel">
            <summary>
            Gets the pose filter level
            </summary>
            <returns>The filter level.</returns>
            <remarks>
            WARNING: All gesture filter functionality is blocked on AD-520
            </remarks>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLGestureManager.HandTypeFilterLevel">
            <summary>
            Gets the hand type filter level
            </summary>
            <returns>The filter level.</returns>
            <remarks>
            WARNING: All gesture filter functionality is blocked on AD-520
            </remarks>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLGestureManager.DisableAllGestures">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLGestureManager.EnableGestures(UnityEngine.Experimental.XR.MagicLeap.MLStaticGestureType[],System.Boolean,System.Boolean)">
            <summary>
            Enables or disables an array of static gestures.
            </summary>
            <param name="gestures" />
            <param name="value">Enable or disable gestures.</param>
            <param name="explicitEnable">
            If true, and if parameter value is also true, only the list of provided gestures
            is enabled, all other previously enabled gestures get disabled. No effect if
            parameter value is false.
            </param>
            <remarks>
            Enabling too many gestures will currently lead to decreased sensitivity to each
            individual gesture.
            </remarks>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLGestureManager.SetKeypointsFilterLevel(UnityEngine.Experimental.XR.MagicLeap.MLGestureFilterLevel)">
            <summary>
            Sets the keypoints filter level
            </summary>
            <param name="filterLevel">The desired filter level</param>
            <returns>true if the filter level was successfully applied and false otherwise.</returns>
            <remarks>
            WARNING: All gesture filter functionality is blocked on AD-520
            </remarks>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLGestureManager.SetPoseFilterLevel(UnityEngine.Experimental.XR.MagicLeap.MLGestureFilterLevel)">
            <summary>
            Sets the pose filter level
            </summary>
            <param name="filterLevel">The desired filter level</param>
            <returns>true if the filter level was successfully applied and false otherwise.</returns>
            <remarks>
            WARNING: All gesture filter functionality is blocked on AD-520
            </remarks>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLGestureManager.SetHandTypeFilterLevel(UnityEngine.Experimental.XR.MagicLeap.MLGestureFilterLevel)">
            <summary>
            Sets the hand type filter level
            </summary>
            <param name="filterLevel">The desired filter level</param>
            <returns>true if the filter level was successfully applied and false otherwise.</returns>
            <remarks>
            WARNING: All gesture filter functionality is blocked on AD-520
            </remarks>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLGestureManager.LastConfigurationApplied">
            <summary>
            Returns whether the settings have actually been applied to the active configuration.
            </summary>
            <returns>true if the settings have actually been applied to the active configuration and false otherwise.</returns>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLHand">
            <summary>
            MLHand contains the hand tracking data including gestures,
            hand centers and key points for a specific hand.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLHand.#ctor(UnityEngine.Experimental.XR.MagicLeap.MLHandType,MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID[],MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID)">
            <summary>
            Initializes a new instance of the MLHand" class.
            </summary>
            <param name="handType">Hand type.</param>
            <param name="keyPointCoordinateFrameIds">Key point coordinate frame identifiers.</param>
            <param name="handCenterCoordinateFrameId">Hand center coordinate frame identifier.</param>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLHand.OnStaticGestureBegin">
            <summary>
            Event is raised whenever a static gesture type starts being recognized for this hand.
            </summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLHand.OnStaticGestureEnd">
            <summary>
            Event is raised whenever a static gesture type stops being recognized for this hand.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLHand.StaticGesture">
            <summary>
            Gets currently recognized static gesture.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLHand.HandType">
            <summary>
            Gets the Hand Type (left or right)
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLHand.KeyPoints">
            <summary>
            Gets key points detected for the current static gesture.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLHand.Center">
            <summary>
            Gets hand center.
            Remains in same location if hand is not detected.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLHand.NormalizedCenter">
            <summary>
            Gets normalized center of the hand.
            Remains in same location if hand is not detected.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLHand.GestureConfidence">
            <summary>
            Gets confidence level of the pose by the hand.
            </summary>
            <returns>
            Float value is between [0, 1], 0 is low, 1 is high degree of confidence.
            For a NoHand, the confidence is always set to 1.
            </returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLHand.GetGestureUp(UnityEngine.Experimental.XR.MagicLeap.MLStaticGestureType)">
            <summary>
            Returns true if the gesture stops being recognized on Update.
            </summary>
            <param name="gesture" />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLHand.GetGestureDown(UnityEngine.Experimental.XR.MagicLeap.MLStaticGestureType)">
            <summary>
            Returns true if the gesture starts being recognized on Update.
            </summary>
            <param name="gesture" />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLHand.Update(MagicLeapInternal.GestureApiNativeBindings.MLGestureOneHandedState,System.IntPtr)">
            <summary>
            Updates MLHand state variables and gestures. Note: It's not advisable
            to call this outside the context of the MLHands and MLGestureManager
            </summary>
            <param name="newState">New state.</param>
            <param name="perceptionSnapshot">Perception snapshot.</param>
            <returns>
            </returns>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLHands">
            <summary>
            MLHands is the entry point for all the hand tracking data
            including gestures, hand centers and key points for both hands.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLHands._right">
            <summary>
            Right hand class used to get right hand specific data.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLHands._left">
            <summary>
            Left hand class used to get left hand specific data.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLHands.GestureManager">
            <summary>
            Gesture Manager if the instance.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLHands.Left">
            <summary>
            Left hand.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLHands.Right">
            <summary>
            Right hand.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLHands.CreateInstance">
            <summary>
            static instance of the MLHands class
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLHands.Start">
            <summary>
            Starts the Hands API.
            </summary>
            <returns>true if the API is successfully initialized and false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLHands.StartAPI">
            <summary>
            Start tracking hands with all gestures disabled.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLHands.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLHands.Update(System.Single,System.IntPtr)">
            <summary>
            Updates the gesture state based on the provided snapshot.
            </summary>
            <param name="timeDelta">The amount of time (in seconds) that has passed since the last call to Update().</param>
            <param name="perceptionSnapshot">A snapshot of the observed world state at the current update time.</param>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLIdentityAttribute">
            <summary>
            MLIdentityAttribute represents an attribute of a user's profile
            (for instance: name, address, email). Each attribute has a name (represented by key and value).
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityAttribute.EnumValue">
            <summary>
            The enum value.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityAttribute.Name">
            <summary>
            Attribute Name.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityAttribute.Value">
            <summary>
            Attribute's string value. Call GetValueAs* functions to get
            the value of the attribute as other types (eg. int, float etc )
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityAttribute.IsRequested">
            <summary>
            The is requested.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityAttribute.IsGranted">
            <summary>
            The is granted.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLIdentityAttribute.IsDirty">
            <summary>
            Gets or sets a value indicating whether this attribute is dirty.
            </summary>
            <value>
                <c>true</c> if is dirty; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLIdentityAttribute.GetValueAsFloat">
            <summary>
            Gets the value as float.
            </summary>
            <returns>The value as float.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLIdentityAttribute.GetValueAsInt">
            <summary>
            Gets the value as int.
            </summary>
            <returns>The value as int.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLIdentityAttribute.Update(System.Int32)">
            <summary>
            update with the new value
            </summary>
            <returns>The update.</returns>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLIdentityAttribute.Update(System.String)">
            <summary>
            Update the specified newValue.
            </summary>
            <returns>The update.</returns>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLIdentityAttribute.Update(System.Single)">
            <summary>
            Update the specified newValue.
            </summary>
            <returns>The update.</returns>
            <param name="newValue">New value.</param>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.InternalMLIdentityProfile">
            <summary>
            Internal raw representation of C API's MLIdentityProfile.
            MLIdentityProfile represents a set of attribute of a user's profile.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.InternalMLIdentityProfile.AttributeCount">
            <summary>
            attributeCount is the number of MLIdentityAttribute structures pointed
            to by attributePtrs.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.InternalMLIdentityProfile.AttributePtrs">
            <summary>
            attributePtrs is an array of MLIdentityAttributes containing user profile
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLIdentityProfile">
            <summary>
            Public represenation of MLIdentityProfile.
            MLIdentityProfile represents a set of attribute of a user's profile.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityProfile.RequestAttributes">
            <summary>
            Optionally specific attributes to request for this profile.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityProfile._profilePtr">
            <summary>
            Internal pointer used to associate the the managed version of this structure
            with the unmanaged pointer that is used by the Identity API to communicate with us.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityProfile._profile">
            <summary>
            Internal convenience structure which represents the marshaled unmanaged structure
            to communicate with the Identity API.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityProfile._request">
            <summary>
            Request class used to keep track of pending requests for ideneity data.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLIdentityProfile.IsValid">
            <summary>
            Public property to check if internal pointer and hence this profile is valid.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLIdentityProfile.Attributes">
            <summary>
            Array of MLIdentityAttributes containing user profile.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLIdentityProfile.Fetch(System.Action{UnityEngine.Experimental.XR.MagicLeap.MLIdentityError})">
            <summary>
            Fetch the specified attributes and callback when result is known.
            </summary>
            <param name="callback">Callback.</param>
            <returns>Returns MLIdentityError indicating result of query request.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLIdentityProfile.Save(System.Action{UnityEngine.Experimental.XR.MagicLeap.MLIdentityError})">
            <summary>
            Attempt to save the modified attributes and callback when result is known.
            </summary>
            <param name="callback">Callback.</param>
            <returns>Returns MLIdentityError indicating result of modify request.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLIdentityProfile.Cleanup">
            ReleaseUserProfile releases all resources associated with the</member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLImageTargetTrackingStatus">
            <summary>
            Identifies the status of an Image Target.
            Each MLImageTargetResult will include a ImageTrackerTargetStatus
            giving the current status of the target.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTargetTrackingStatus.Tracked">
            <summary>
            Image Target is tracked.
            The Image Tracker system will provide a 6 DOF pose when queried using
            MLSnapshotGetTransform function.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTargetTrackingStatus.Unreliable">
            <summary>
            Image Target is tracked with low confidence.
            The Image Tracker system will still provide a 6 DOF pose. But this
            pose might be inaccurate and might have jitter. When the tracking is
            unreliable one of the folling two events will happen quickly : Either the
            tracking will recover to #MLImageTrackerTargetStatus_Tracked or tracking
            will be lost and the status will change to
            #MLImageTrackerTargetStatus_NotTracked.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTargetTrackingStatus.NotTracked">
            <summary>
            Image Target is lost.
            The Image Tracker system will not report any pose for this target. Querying
            for the pose using #MLSnapshotGetTransform will return false.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLImageTargetResult">
            <summary>
            The resulting transform and status that will be sent to the callback.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTargetResult.Position">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTargetResult.Rotation">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTargetResult.Status">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLImageTarget.#ctor(System.String,UnityEngine.Texture2D,System.Single,System.Action{System.String,UnityEngine.Experimental.XR.MagicLeap.MLImageTargetResult},System.UInt64,System.Boolean)">
            <summary>
            constructs the MLImageTarget object with specified parameters
            <param name="name"> Image target's name. </param><param name="image"> Texture2D representing the image target. </param><param name="longerDimension"> Longer dimension in scene units. Default is meters. </param><param name="callback"> Tracking result callback for this image target. </param><param name="trackerHandle"> Handle for the ImageTracker. </param><param name="isStationary"> if true the position of this image target in real world is fixed. </param></summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLImageTarget.MLImageTargetTransform">
            <summary>
            The resulting transform received from the API.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTarget._handle">
            <summary>
            The internal ML_HANDLE used to reference this target
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTarget._trackerHandle">
            <summary>
            The internal ML_HANDLE used to reference the tracker for this target
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTarget.TargetSettings">
            <summary>
            Reference to the target's internal settings including longer dimension (in meters),
            name and positional information.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLImageTarget.IsValid">
            <summary>
            Check the validaty of the target handle
            </summary>
            <returns> boolean value true if the target is valid false otherwise</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLImageTarget.Finalize">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLImageTarget.Dispose">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLImageTarget.Cleanup(System.Boolean)">
            <summary>
            Cleans up unmanaged memory.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLImageTarget.Update(System.IntPtr)">
            <summary>
            Updates the tracking data on the passed in target and calls it's
            update callback with the new transform data of the tracked object.
            </summary>
            <param name="snapshot">The current ML snapshot</param>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLImageTarget.UpdateTrackingData(System.IntPtr)">
            <summary>
            Updates this image target's tracking data, status , and transforms
            </summary>
            <returns> boolean value true if the result was successfully retrieved, false otherwise </returns>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLImageTracker">
            <summary>
            Image tracker class that manages connecting to the native Image tracker api. It provides ability to add and remove image targets.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLImageTracker.#ctor">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTracker._handle">
            <summary>
            The internal ML_HANDLE used to reference this tracker
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTracker._targetList">
            <summary>
            The list of targets currently being tracked by this image tracker.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTracker._isTrackerPaused">
            <summary>
            The list of targets currently being tracked by this image tracker.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTracker._trackerSettings">
            <summary>
            The list of settings for this image tracker
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLImageTracker.CreateInstance">
            <summary>
            static instance of the MLImageTracker class
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLImageTracker.Start">
            <summary>
            Starts the Image Tracker API.
            </summary>
            <returns>true if the API is successfully initialized and false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLImageTracker.StartAPI">
            <summary>
            Initializes this image tracker and subscribes to the MagicLeap device's update loop.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLImageTracker.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up this image tracker and unsubscribes from the MagicLeap device's update loop.
            </summary>
            <param name="isSafeToAccessManagedObjects">Whether it is safe for the cleanup routine to access managed objects</param>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLImageTracker.Update(System.Single,System.IntPtr)">
            <summary>
            Updates the tracker state based on the provided snapshot.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLImageTracker.Pause">
            <summary>
            Pauses the image tracker.
            </summary>
            <returns>true if the tracker is paused and false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLImageTracker.Resume">
            <summary>
            Unpauses the image tracker and resumes processing.
            </summary>
            <returns>true if the tracker is running and false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLImageTracker.AddTarget(System.String,UnityEngine.Texture2D,System.Single,System.Action{System.String,UnityEngine.Experimental.XR.MagicLeap.MLImageTargetResult},System.Boolean)">
            <summary>
            Adds a new target to this image tracker to be tracked.
            </summary>
            <param name="name">The unique name of this target.</param>
            <param name="image">The Texture2D of the image to be tracked.</param>
            <param name="longerDimension">Size of the longer dimension in scene units. </param>
            <param name="callback">The function that will be triggered with target info.</param>
            <param name="isStationary">Is this target stationary in the physical world.</param>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLImageTracker.AddTargetInternal(System.String,UnityEngine.Texture2D,System.Single,System.Action{System.String,UnityEngine.Experimental.XR.MagicLeap.MLImageTargetResult},System.Boolean)">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLImageTracker.RemoveTarget(System.String)">
            <summary>
            Removes a target whose name matches the passed in name.
            </summary>
            <param name="name">The name of the target to remove</param>
            <returns>True if the target was found and removed, false otherwise</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLImageTracker.RemoveTargetInternal(System.String)">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInputConfiguration.#ctor">
            <summary />
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputConfiguration.Dof">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInputConfiguration.op_Implicit(UnityEngine.Experimental.XR.MagicLeap.MLInputConfiguration)~MagicLeapInternal.InputNativeBindings.MLInputConfiguration">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInput">
            <summary>
            Stores the current input information and sends input events.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInput.#ctor(UnityEngine.Experimental.XR.MagicLeap.MLInputConfiguration)">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInput.Hand">
            <summary>
            Standardized enumeration of handedness
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInput.Hand.Left">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInput.Hand.Right">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInput.OnControllerTouchpadGestureNativeCallback">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInput.OnControllerButtonNativeCallback">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInput.OnControllerConnectNativeCallback">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInput.OnControllerDisconnectNativeCallback">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInput._inputHandle">
            <summary>
            The internal handle attached to this instance of MLInput
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInput._controllerStateUnmanaged">
            <summary>
            The current input controller state.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInput._controllers">
            <summary>
            The two controller objects currently being tracked.
            [0] = Left
            [1] = Right
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInput._config">
            <summary>
            The input configuration to send to MLInputCreate
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInput._queuedActions">
            <summary />
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLInput.OnControllerTouchpadGestureStart">
            <summary>
            This callback will be invoked whenever a detected touchpad gesture begins.
            </summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLInput.OnControllerTouchpadGestureContinue">
            <summary>
            This callback will be invoked as a detected touchpad gesture continues.
            </summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLInput.OnControllerTouchpadGestureEnd">
            <summary>
            This callback will be invoked whenever a detected touchpad gesture ends.
            </summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLInput.OnControllerButtonDown">
            <summary>
            This callback will be invoked whenever a button press is detected.
            </summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLInput.OnControllerButtonUp">
            <summary>
            This callback will be invoked whenever a button release is detected.
            </summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLInput.OnControllerConnected">
            <summary>
            This callback will be invoked when a controller is connected.
            </summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLInput.OnControllerDisconnected">
            <summary>
            This callback will be invoked when a controller is disconnected.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInput.QueueCallback(System.Action)">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInput.CreateInstance(UnityEngine.Experimental.XR.MagicLeap.MLInputConfiguration)">
            <summary>
            static instance of the MLInput class
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInput.Start(UnityEngine.Experimental.XR.MagicLeap.MLInputConfiguration)">
            <summary>
            Starts the Input API.
            </summary>
            <returns>true if the API is successfully initialized and false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInput.GetController(UnityEngine.Experimental.XR.MagicLeap.MLInput.Hand)">
            <summary>
            Gets a reference to a Controller object via hand mapping
            </summary>
            <returns>The first MLInputController mapped to the specified hand</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInput.GetController(System.Int32)">
            <summary>
            Gets a reference to a Controller object via index
            </summary>
            <returns>MLInputController corresponding to the specified index, null if no MLInput Instance exists</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInput.SetControllerHand(System.Int32,UnityEngine.Experimental.XR.MagicLeap.MLInput.Hand)">
            <summary>
            Maps a controller reference to a specific hand
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInput.GetControllerIndexFromHand(UnityEngine.Experimental.XR.MagicLeap.MLInput.Hand)">
            <summary>
            Maps a controller reference to a specific index
            </summary>
            <returns>index of controller, -1 if no MLInput Instance exists</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInput.GetHandFromControllerIndex(System.Int32)">
            <summary>
            Allows users to map a controller index to a hand
            </summary>
            <returns>Hand corresponding to the specified index, Hand.Right if no MLHands instance exists</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInput.InternalGetController(UnityEngine.Experimental.XR.MagicLeap.MLInput.Hand)">
            <summary>
            Gets a reference to a Controller object via hand mapping
            </summary>
            <returns>The first MLInputController mapped to the specified hand</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInput.InternalGetController(System.Int32)">
            <summary>
            Gets a reference to a Controller object via index
            </summary>
            <returns>MLInputController corresponding to the specified index</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInput.InternalSetControllerHand(System.Int32,UnityEngine.Experimental.XR.MagicLeap.MLInput.Hand)">
            <summary>
            Maps a controller reference to a specific hand
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInput.InternalGetControllerIndexFromHand(UnityEngine.Experimental.XR.MagicLeap.MLInput.Hand)">
            <summary>
            Maps a controller reference to a specific index
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInput.InternalGetHandFromControllerIndex(System.Int32)">
            <summary>
            Allows users to map a controller index to a hand
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInput.StartAPI">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInput.Update(System.Single,System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInput.PollState">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInput.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up this input tracker and unsubscribes from the MagicLeap device's update loop.
            </summary>
            <param name="isSafeToAccessManagedObjects">Whether it is safe for the cleanup routine to access managed objects.</param>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInputController">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInputController.#ctor(System.UInt64,System.Byte,UnityEngine.Experimental.XR.MagicLeap.MLInput.Hand)">
            <summary />
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputController.Hand">
            <summary>
            The hand this controller is mapped to.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputController.State">
            <summary>
            The current state of this controller.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputController.Connected">
            <summary>
            Is this controller connected to the device?
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputController.Position">
            <summary>
            Gets the current 3DoF position.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputController.Orientation">
            <summary>
            Gets the current 3DoF orientation.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputController.Touch1PosAndForce">
            <summary>
            Gets the current touch 1 position (x,y) and force (z). Force is [0-1].
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputController.Touch1Active">
            <summary>
            Gets whether touch 1 is active.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputController.Touch2PosAndForce">
            <summary>
            Gets the current touch 2 position (x,y) and force (z). Force is [0-1].
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputController.Touch2Active">
            <summary>
            Gets whether touch 2 is active.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputController.TriggerValue">
            <summary>
            Gets current trigger value [0.0-1.0]
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputController.TouchpadGestureState">
            <summary>
            Current touchpad gesture state
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputController.Type">
            <summary>
            Type of this controller
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputController.Dof">
            <summary>
            Current degrees of freedom mode of the controller
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputController.TouchpadGesture">
            <summary>
            Current touchpad gesture
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputController.Id">
            <summary>
            Controller ID
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInputController.StartFeedbackPatternLED(UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED,UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackColorLED,System.Single)">
            <summary>
            Start the controller's LED in the specified pattern and set the duration (in seconds)
            </summary>
            <returns>
            True if pattern is successfully started, false otherwise.
            </returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInputController.StartFeedbackPatternEffectLED(UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackEffectLED,UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackEffectSpeedLED,UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED,UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackColorLED,System.Single)">
            <summary>
            Start the controller's LED performing the specified effect at the specified speed with the specified pattern for the specified duration (in seconds)
            </summary>
            <returns>
            True if effect is successfully started, false otherwise.
            </returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInputController.StartFeedbackPatternVibe(UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternVibe,UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackIntensity)">
            <summary>
            Vibrate the controller in the specified pattern
            </summary>
            <returns>
            True if vibration is successfully started, false otherwise.
            </returns>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGesture">
            <summary>
            Class that encasulate touchpad gestures data.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGesture.#ctor">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGesture.#ctor(MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture)">
            <summary />
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGesture.PosAndForce">
            <summary>
            Gesture position (x,y) and force (z). Force is [0-1]
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGesture.Type">
            <summary>
            Type of gesture
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGesture.Direction">
            <summary>
            Direction of gesture
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGesture.Speed">
            <summary>
            Speed of gesture. Note that this takes on different meanings depending
            on the gesture type being performed. For radial gestures, this will be
            the angular speed around the axis. For pinch gestures, this will be the
            speed at which the distance between fingers is changing.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGesture.Distance">
            <summary>
            For radial gestures, this is the absolute value of the angle. For scroll
            and pinch gestures, this is the absolute distance traveled.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGesture.FingerGap">
            <summary>
            Distance between the two fingers performing the gesture.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGesture.Radius">
            <summary>
            For radial gestures, this is the radius of the gesture.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGesture.Angle">
            <summary>
            Angle from the center of the touchpad to the finger.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLLightingTracker">
            <summary>
            Provides environment lighting information.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLLightingTracker.#ctor">
            <summary>
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLLightingTracker.GlobalTemperature">
            <summary>Kelvin color temperature</summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLLightingTracker.GlobalTemperatureColor">
            <summary>RGB represenation of the kelvin color temperature.</summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLLightingTracker.AmbientCameraLuminance">
            <summary>Array of each camera's luminance in nits.</summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLLightingTracker.AverageLuminance">
            <summary>Average luminace in nits of all sensors.</summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLLightingTracker.CreateInstance">
            <summary>
            Static instance of the MLLightingTracker class
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLLightingTracker.Start">
            <summary>
            Starts MLLightingTracker.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLLightingTracker.StartAPI">
            <summary>
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLLightingTracker.CleanupAPI(System.Boolean)">
            <summary>
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLLightingTracker.CalculateGlobalTemperatureColor">
            <summary>
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLLightingTracker.CalculateGlobalAmbientScalar">
            <summary>
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLLightingTracker.Update(System.Single,System.IntPtr)">
            <summary>
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceError">
            <summary>
            Contains the error type and error code received from the music service
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceError.ErrorType">
            <summary>The error type</summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceError.ErrorCode">
            <summary>
            For ErrorTypes other than ServiceSpecific, the value of ErrorCode
            will match the value of ErrorType.
            When ErrorType is ServiceSpecific, the ErrorCode will be
            specific to the music streaming service
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceMetadata">
            <summary>
            Contains the meta data for a track
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceMetadata.AlbumTitle">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceMetadata.AlbumInfoName">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceMetadata.AlbumInfoUrl">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceMetadata.AlbumInfoCoverUrl">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceMetadata.ArtistInfoName">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceMetadata.ArtistInfoUrl">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceMetadata.Length">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceMetadata.Position">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLMusicService">
            <summary>
            Manages MusicService.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.TrackLength">
            <summary>
            Current Track Length
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.CurrentPosition">
            <summary>
            Current position of playback
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.PlaybackState">
            <summary>
            Current Playback State of the music service
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.RepeatState">
            <summary>
            Current Repeat State of the music service
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.ShuffleState">
            <summary>
            Current Shuffle State of the music service
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.Connect(System.String)">
            <summary>
            Connect to a specified music service provider
            </summary>
            <param name="name">Name of the music service provider</param>
            <returns>True if call succeeded, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.Disconnect">
            <summary>
            Disconnects from the currently connected music service provider and clean up
            </summary>
            <returns>True if call succeeded, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.SetAuthString(System.String)">
            <summary>
            Sets the authentication string for the MusicService
            </summary>
            <param name="authString">Service provider specific authentication string</param>
            <returns>True if call succeeded, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.SetURL(System.String)">
            <summary>
            Set a single, specific URL to play
            </summary>
            <param name="url">The URL to play</param>
            <returns>True if call succeeded, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.SetPlayList(System.String[])">
            <summary>
            Set an array of URLs to use for the playlist
            </summary>
            <param name="playList">The array of URLs</param>
            <returns>True if call succeeded, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.StartPlayback">
            <summary>
            Start playing the current track
            </summary>
            <returns>True if call succeeded, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.StopPlayback">
            <summary>
            Stop playing the current track
            </summary>
            <returns>True if call succeeded, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.PausePlayback">
            <summary>
            Pause the current track
            </summary>
            <returns>True if call succeeded, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.ResumePlayback">
            <summary>
            Resume playback of the current track
            </summary>
            <returns>True if call succeeded, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.Seek(System.UInt32)">
            <summary>
            Seek to a specified position within the current track
            </summary>
            <param name="position">The position in milliseconds to seek </param>
            <returns>True if call succeeded, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.Next">
            <summary>
            Advances to the next track in the playlist
            </summary>
            <returns>True if call succeeded, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.Previous">
            <summary>
            Moves to the previous track in the playlist
            </summary>
            <returns>True if call succeeded, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.SetShuffle(UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceShuffleState)">
            <summary>
            Set shuffle on or off
            </summary>
            <param name="mode">The shuffle state to set</param>
            <returns>True if call succeeded, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.SetRepeat(UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceRepeatState)">
            <summary>
            Set the repeat mode for the music service
            </summary>
            <param name="mode">The repeat mode to set</param>
            <returns>True if call succeeded, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.SetVolume(System.Single)">
            <summary>
            Set the volume for the background music
            </summary>
            <param name="volume">Float within the range of 0.0 to 1.0</param>
            <returns>True if call succeeded, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.GetStatus">
            <summary>
            Get the current status of the music service
            </summary>
            <returns>MLMusicServiceStatus enum</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.GetError">
            <summary>
            Get the error from the music service
            </summary>
            <returns>Error structure with more information about the error</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.GetMetadata">
            <summary>
            Get the meta data for the current track
            </summary>
            <returns>Structure containing the requested metadata </returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.RegisterCallbacks(UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceCallbacks)">
            <summary>
            Set a structure containing the desired callbacks. For unwanted callbacks, null can be
            set. The user must call CleanupCallbacks with the returned IntPtr from this function
            when the callbacks are no longer desired or the application is cleaning up/exiting.
            </summary>
            <param name="callbacks">Structure containing the callback delegate references</param>
            <returns>IntPtr allocated for these callbacks</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLMusicService.CleanupCallbacks(System.IntPtr)">
            <summary>
            Set all callback references to null and cleans up memory allocated to the IntPtr.
            Must be called if RegisterCallbacks is ever used
            </summary>
            <param name="callbackPtr">The IntPtr returned by RegisterCallbacks</param>
            <returns>None</returns>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLStorageRequestResult">
            <summary>
            Possible camera request results.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLStorageRequestResult.Success">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLStorageRequestResult.NullDataFailure">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLStorageRequestResult.NullOrEmptyKeyStringFailure">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLStorageRequestResult.NonAnsiKeyStringFailure">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLStorageRequestResult.SerializationFailure">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLStorageRequestResult.DeserializationFailure">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLStorageRequestResult.NativeApiFailure">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLSecureStorage">
            <summary>
            User interface to ML's secure storage API.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLSecureStorage.StoreData(System.String,System.Byte[])">
            <summary>
            Stores the specified data under the specified key. An existing key would be overwritten.
            </summary>
            <param name="dataKey">The key string associated with the data.</param>
            <param name="data">The data byte array to store.</param>
            <returns>Whether or not the data was stored successfully.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLSecureStorage.StoreData``1(System.String,``0)">
            <summary>
            Generic store function for all value types.
            Using BinaryFormatter.Serialize() to serialize data to bytes.
            </summary>
            <param name="dataKey">The key string associated with the data.</param>
            <param name="value">The generic type value to store.</param>
            <returns>Whether or not the data was stored successfully.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLSecureStorage.GetData(System.String,System.Byte[]@)">
            <summary>
            Retrieves the data associated with the specified key.
            </summary>
            <param name="dataKey">The key string to look for.</param>
            <param name="data">A valid array of bytes to store retrieved data.</param>
            <returns>Whether or not the data was found and retrieved successfully.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLSecureStorage.GetData``1(System.String,``0@)">
            <summary>
            Generic get function for all value types.
            Using BinaryFormatter.Deserialize() to deserialize bytes to specified value type.
            </summary>
            <param name="dataKey">The key string to look for.</param>
            <param name="value">A generic type value to store retrieved data.</param>
            <returns>Whether or not the data was found and retrieved successfully.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLSecureStorage.DeleteData(System.String)">
            <summary>
            Deletes the item associated with the specified key.
            </summary>
            <param name="dataKey">The key string of the item to delete.</param>
            <returns>true if the item was deleted successfully or did not exist altogether.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLSecureStorage.CheckKey(System.String)">
            <summary>
            Utility function that searches for unicode characters in a string.
            </summary>
            <param name="dataKey">String to test.</param>
            <returns>True if unicode character was found, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLSecureStorage.SerializeData(System.Object)">
            <summary>
            Method to serialize arbitrary objects into a byte array.
            </summary>
            <param name="obj">Base System.Object of data to serialize.</param>
            <returns>byte array of serialized data.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLSecureStorage.DeserializeData(System.Byte[])">
            <summary>
            Method to deserialize arbitrary objects from a byte array.
            </summary>
            <param name="data">byte array of serialized data.</param>
            <returns>Base System.Object of deserialized data.</returns>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent">
            <summary>
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.MLTokenAgentCredentials">
            <summary>
            The credentials that can be used to for a user to access a particular service (Audience).
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.MLTokenAgentCredentials.accessKeyId">
            <summary>
            Null terminated string allocated and released by the library.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.MLTokenAgentCredentials.secretKey">
            <summary>
            Null terminated string allocated and released by the library.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.MLTokenAgentCredentials.sessionToken">
            <summary>
            Null terminated string allocated and released by the library.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.MLTokenAgentTokens">
            <summary>
            MLTokenAgentTokens contains tokens that are used to read and modify the user profile.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.MLTokenAgentTokens.idToken">
            <summary>
            The idToken contains information from the user profile.
            It is a null terminated string that is allocated and released by the library.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.MLTokenAgentTokens.accessToken">
            <summary>
            The accessToken is the token that can be used to modify attributes of the user profile.
            It is a null terminated string that is allocated and released by the library.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.InternalMLTokenAgentClientCredentials">
            <summary>
            Internal raw representation of C API's MLTokenAgentClientCredentials.
            MLTokenAgentClientCredentials represents the credentials and tokens of the User-Audience pair
            that is associated with the calling service.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.InternalMLTokenAgentClientCredentials.credentials">
            <summary>
            The credentials that can be used to access a particular service (Audience).
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.InternalMLTokenAgentClientCredentials.tokens">
            <summary>
            The tokens that can be used to manage the user profile for a particular Audience.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials">
            <summary>
            Public represenation of MLTokenAgentClientCredentials.
            MLTokenAgentClientCredentials represents the credentials and tokens of the User-Audience pair
            that is associated with the calling service.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials._clientCredentialsPtr">
            <summary>
            Internal pointer used to associate the the managed version of this structure
            with the unmanaged pointer that is used by the TokenAgent API to communicate with us.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials._clientCredentials">
            <summary>
            Internal convenience structure which represents the marshaled unmanaged structure
            to communicate with the TokenAgent API.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials.Valid">
            <summary>
            Public property to check if internal pointer and hence this ClientCredentials is valid.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials.credentials">
            <summary>
            Forward credentials data to/from internal struture.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials.tokens">
            <summary>
            Forward token data to/from internal struture.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.GetClientCredentials(UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials@)">
            <summary>
            GetClientCredentials is a blocking function that accesses the cloud and
            returns a MLTokenAgentClientCredentials structure containing the users credentials and
            tokens for a particular service (Audience).
            The library deduces the Audience being requested from the name of the calling service.
            </summary>
            <param name="outCredentials">
            MLTokenAgentClientCredentials output reference to a structure which was created
            with all its fields by the library. It must only be released using
            ReleaseClientCredentials.
            </param>
            <returns>
                <see cref="T:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgentError" />
            </returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.GetClientCredentialsAsync">
            <summary>
            GetClientCredentialsAsync invokes the GetClientCredentials
            function asynchronously (in a different thread).
            </summary>
            <returns>
            An MLInvokeFuture which provides the means to poll for completion and
            to retrieve the return value and profile returned by GetClientCredentials.
            MLInvokeFuture will become invalid before returning from the first (and last)
            call to GetClientCredentialsWait after the asynchronous call completed.
            </returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.GetClientCredentialsWait(UnityEngine.Experimental.XR.MagicLeap.MLInvokeFuture,System.UInt32,UnityEngine.Experimental.XR.MagicLeap.MLTokenAgentError@,UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials@)">
            <summary>
            Having made a call to MLTokenAgentGetClientCredentialsAsync, the user can call
            MLTokenAgentGetClientCredentialsWait to detect whether the asynchronous call completed and if
            so, to retrieve the credentials in outCredentials. The call to MLTokenAgentGetClientCredentialsWait
            blocks until either msecTimeout msec elapses or the asynchronous function completes.
            </summary>
            <param name="future">
            MLInvokeFuture returned by the GetClientCredentialsAsync function
            </param>
            <param name="msecTimeout">
            The timeout in milliseconds.
            </param>
            <param name="outRetVal">
            Output reference where the return value of MLTokenAgentClientCredentials
            will be copied, if the asynchronous call completed, or MLTokenAgentError.AsyncOperationNotComplete
            if not.
            </param>
            <param name="outCredentials">
            Output reference where the credentials structure created
            by the library will be copied, if the asynchronous call completed.
            </param>
            <returns>
            If the timeout elapsed before the asynchronous call completed,
            GetClientCredentialsWait will return false and outCredentials will be set to null.
            If the asynchronous call completed before the timeout elapsed, the function will return true and
            outCredentials will be set to the address of the MLTokenAgentClientCredentials structure allocated by the
            library. The returned credentials must be released when no longer needed by calling
            ReleaseClientCredentials.
            </returns>
            <remarks>
            Note:
            1. To poll without blocking use msecTimeout = 0
            2. After the function returns true, future is freed by the library and must not be used again in
            	a call to MLTokenAgentGetClientCredentialsWait.
            </remarks>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.ReleaseClientCredentials(UnityEngine.Experimental.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials@)">
            <summary>
            ReleaseClientCredentials releases all resources associated with the
            MLTokenAgentClientCredentials stucture that was returned by the library.
            </summary>
            <param name="credentials">
            MLTokenAgentClientCredentials reference to a strcuture received using one of:
            GetClientCredentials or GetClientCredentialsWait.
            </param>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryFlags">
            <summary>
            Enumeration of plane types
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryFlags.Vertical">
            <summary>
            Include planes whose normal is perpendicular to gravity.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryFlags.Horizontal">
            <summary>
            Include planes whose normal is parallel to gravity.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryFlags.Arbitrary">
            <summary>
            Include planes with arbitrary normals that are not parallel or perpendicular to gravity.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryFlags.AllOrientations">
            <summary>
            Include planes of all possible orientations.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryFlags.OrientToGravity">
            <summary>
            For non-horizontal planes, setting this flag will result in
            the plane rectangle being forced to perpendicular to gravity.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryFlags.Inner">
            <summary>
            If this flag is set, inner planes will be returned; if it is not set,
            outer planes will be returned.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryFlags.IgnoreHoles">
            <summary>
            Instructs the plane system to ignore holes in planar surfaces.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryFlags.SemanticCeiling">
            <summary>
            Include planes semantically tagged as ceiling.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryFlags.SemanticFloor">
            <summary>
            Include planes semantically tagged as floor.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryFlags.SemanticWall">
            <summary>
            Include planes semantically tagged as wall.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryFlags.SemanticAll">
            <summary>
            Include all planes that are semantically tagged.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryParams">
            <summary>
            Plane Startup Configuration Parameters. Pass these to the Start function
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryParams.Flags">
            <summary>
            The flags to apply to this query.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryParams.BoundsCenter">
            <summary>
            The center of the bounding box which defines where planes extraction should occur.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryParams.BoundsRotation">
            <summary>
            The rotation of the bounding box where planes extraction will occur.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryParams.BoundsExtents">
            <summary>
            The size of the bounding box where planes extraction will occur.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryParams.MaxResults">
            <summary>
            The maximum number of results that should be returned.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryParams.MinHoleLength">
            <summary>
            If MLPlanesQueryFlags.IgnoreHoles is not set, holes with a perimeter
            (in meters) smaller than this value will be ignored, and can be part of
            the plane. This value cannot be lower than 0 (lower values will be
            capped to this minimum).
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryParams.MinPlaneArea">
            <summary>
            The minimum area (in squared meters) of planes to be returned. This value
            cannot be lower than 0.04 (lower values will be capped to this minimum).
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlane">
            <summary>
            A quad surface.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlane.Center">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlane.Rotation">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlane.Width">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlane.Height">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlane.Flags">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryResult">
            <summary>
            Possible results of a plane query.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryResult.Failure">
            <summary>
            The plane query failed.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryResult.Success">
            <summary>
            The plane query succeeded and has valid data.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes">
            <summary>
            Creates planes requests and delegates their result.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.Query.Callback">
            <summary>
            Query result callback.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.Query.MaxResults">
            <summary>
            The max results.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.Query.PlanesResultsUnmanaged">
            <summary>
            The planes results unmanaged.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.Query.Planes">
            <summary>
            The planes.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.Query.Result">
            <summary>
            The result.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.Query.Finalize">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.Query.Dispose">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.DefaultQueryFlags">
            <summary>
            The default query flags.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.CreateInstance">
            <summary>
            static instance of the MLWorldPlanes class
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.Start">
            <summary>
            Starts the Planes API.
            </summary>
            <returns>true if the API is successfully initialized and false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.StartAPI">
            <summary>
            Starts the plane object requests, Must be called to start receiving plane results from
            the underlying system.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.Update(System.Single,System.IntPtr)">
            <summary>
            Polls for the result of pending planes requests.
            </summary>
            <param name="timeElapsed">Time elapsed since last frame's update.</param>
            <param name="perceptionSnapshot">Native pointer to this frame's perception snapshot.</param>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.ProcessPendingQueries">
            <summary>
            Process pending requests and call the callback specified in the startup config.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.GetQueryResultForHandle(System.UInt64,UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.Query)">
            <summary>
            Execute query.
            </summary>
            <param name="handle">ML internal handle for the pending query.</param>
            <param name="query">Query class for the pending query.</param>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.ExtractPlanesFromQueryResults(UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.Query,System.UInt32)">
            <summary>
            Extract unmanaged plane data and convert to managed plane data.
            </summary>
            <param name="query">Query class for the pending query.</param>
            <param name="numResults">Number of plane results returned.</param>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.ProcessCompletedQueries">
            <summary>
            Go through all completed queries and publish their results also clean them up.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.GetPlanes(UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryParams,System.Action{UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryResult,UnityEngine.Experimental.XR.MagicLeap.MLWorldPlane[]})">
            <summary>
            Request real world quad surfaces.
            </summary>
            <param name="queryParams">Plane query options.</param>
            <param name="callback">Callback used to report query results.</param>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.GetPlanesInternal(UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryParams,System.Action{UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryResult,UnityEngine.Experimental.XR.MagicLeap.MLWorldPlane[]})">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanes.BeginPlaneQuery(UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryParams,System.Action{UnityEngine.Experimental.XR.MagicLeap.MLWorldPlanesQueryResult,UnityEngine.Experimental.XR.MagicLeap.MLWorldPlane[]})">
            <summary>
            Begin querying for planes.
            </summary>
            <param name="queryParams">Plane query options.</param>
            <param name="callback">Callback used to report query results.</param>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays">
            <summary>
            Sends requests to create Rays intersecitng world geometry and returns results through callbacks.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.QueryParams">
            <summary>
            Parameters for a raycast request.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.QueryParams.Position">
            <summary>
            Where the ray is cast from.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.QueryParams.Direction">
            <summary>
            Direction of the ray to fire.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.QueryParams.UpVector">
            <summary>
            Up vector of the ray to fire.  Use (0, 0, 0) to use the up vector of the rig frame.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.QueryParams.Width">
            <summary>
            The number of horizontal rays. For single point raycast, set this to 1.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.QueryParams.Height">
            <summary>
            The number of vertical rays. For single point raycast, set this to 1.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.QueryParams.HorizontalFovDegrees">
            <summary>
            The horizontal field of view, in degrees.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.QueryParams.CollideWithUnobserved">
            <summary>
            If true, a ray will terminate when encountering an unobserved area and return
            a surface or the ray will continue until it ends or hits a observed surface.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.ResultCallback">
            <summary>
            Delegate used to convey the result of a raycast.
            </summary>
            <param name="didHit">True if the ray hit an observed or an unobserved area and the other data members of the raycast result are valid.</param>
            <param name="hitpoint">Where in the world the collision happened.</param>
            <param name="normal">Normal to the surface where the ray collided.</param>
            <param name="confidence">The confidence of the ray cast result. Confidence is a non-negative value from 0 to 1 where closer to 1 indicates a higher quality.</param>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.CreateInstance">
            <summary>
            static instance of the MLWorldRays class
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.Start">
            <summary>
            Starts the World Rays API.
            </summary>
            <returns>true if the API is successfully initialized and false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.StartAPI">
            <summary>
            Starts the plane object requests, Must be called to start receiving plane results from
            the underlying system
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.EnableRayCast(System.Boolean)">
            <summary>
            Enable/disable ray cast
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up memory plus disables raycast feature
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.DestroyNativeTracker">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.Clear">
            <summary>
            Clear pending request queue, free up memory
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.Update(System.Single,System.IntPtr)">
            <summary>
            Polls for the result of pending raycast requests.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.PublishResults">
            <summary>
            Publish results to every pending callback
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.GetWorldRays(UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.QueryParams,UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.ResultCallback)">
            <summary>
            Requests a raycast with the given query parameters.
            </summary>
            <param name="query">Query parameters describing ray being cast.</param>
            <param name="callback">Delegate which will be called when the result of the raycast is ready.</param>
            <returns>True if the raycast request was successfully made, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.GetWorldRaysInternal(UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.QueryParams,UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.ResultCallback)">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.RequestRays(UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.QueryParams,UnityEngine.Experimental.XR.MagicLeap.MLWorldRays.ResultCallback)">
            <summary>
            Request world rays
            </summary>
            <param name="query">Query parameters describing ray being cast.</param>
            <param name="callback">Delegate which will be called when the result of the raycast is ready.</param>
            <returns>True if the raycast request was successfully made, false otherwise.</returns>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLScreensRequestResult">
            <summary>
            Result of Screens API function call.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLScreensRequestResult.Success">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLScreensRequestResult.FailureUnknownId">
            <summary>
            Unkown entry id referenced.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLScreensRequestResult.FailureInvalidEntry">
            <summary>
            WatchHistoryEntry is invalid.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLScreensRequestResult.FailureInvalidThumbnailFormat">
            <summary>
            Thumbnail image was not passed as RGB24
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLScreensRequestResult.FailureNullThumbnail">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLScreensRequestResult.FailureOther">
            <summary>
            Other failure besides referencing unknown entry id.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLScreensScreenInfo">
            <summary>
            System screen information.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLScreensScreenInfo.Position">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLScreensScreenInfo.Rotation">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLScreensScreenInfo.Dimensions">
            <summary>
            x, y and z represent
            width, height and depth respectively.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLScreensWatchHistoryEntry">
            <summary>
            Media watch entry for channel application.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLScreensWatchHistoryEntry.Id">
            <summary>
            Identification number.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLScreensWatchHistoryEntry.Title">
            <summary>
            Media title.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLScreensWatchHistoryEntry.Subtitle">
            <summary>
            Media subtitle. Can be left as empty string.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLScreensWatchHistoryEntry.PlaybackPositionMs">
            <summary>
            Last playback position in milliseconds.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLScreensWatchHistoryEntry.PlaybackDurationMs">
            <summary>
            Total duration in milliseconds.
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MLScreensWatchHistoryEntry.IsValid">
            <summary>
            Entry is valid if:
            * PlaybackPositionMs is smaller or equal to PlaybackDurationMs.
            * Title and Subtitle are not null.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLScreensWatchHistoryEntry.ToString">
            <inheritdoc />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLScreens">
            <summary>
            Manages list of Screens media watch history and
            exposes external screen placement.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLScreens.DefaultThumbnailWidth">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLScreens.DefaultThumbnailHeight">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLScreens.DefaultThumbnailIntensityValue">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLScreens.SupportedThumbnailTextureFormats">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLScreens._watchHistory">
            <summary>
            Used to cache entries and avoid native calls if unnecessary.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLScreens._watchHistoryList">
            <summary>
            Is not kept up to date. Only necessary for getting watch history at
            start.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLScreens.CheckValidInstance">
            <summary>
            Utility function checks for valid instance and throws an exception if not found.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLScreens.CreateInstance">
            <summary>
            static instance of the MLScreens class
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLScreens.IsValidInstance">
            <summary>
            Returns true if the instance exists
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLScreens.Start">
            <summary>
            Initializes the component.
            </summary>
            <returns>Returns true if successful, and false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLScreens.Stop">
            <summary>
            Component cleanup. Needs to be called when done with the component.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLScreens.Finalize">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLScreens.Dispose">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLScreens.StopAPI">
            <summary>
            Reduces reference count to Singleton.
            Cleans up memory if no more references remain.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLScreens.Add(UnityEngine.Experimental.XR.MagicLeap.MLScreensWatchHistoryEntry@)">
            <summary>
            Adds new media watch entry to history with default thumbnail.
            </summary>
            <param name="entry">
            Entry to add. Id is ignored and gets overwritten if operation is successful.
            </param>
            <returns />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLScreens.Add(UnityEngine.Experimental.XR.MagicLeap.MLScreensWatchHistoryEntry@,UnityEngine.Texture2D)">
            <summary>
            Adds new media watch entry to history.
            </summary>
            <param name="entry">
            Entry to add. Id is ignored and gets overwritten if operation is successful.
            </param>
            <param name="thumbnailImage">
            Thumbnail image for entry. Format needs to be TextureFormat.RGB24.
            </param>
            <returns />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLScreens.Remove(System.Int64)">
            <summary>
            Removes entry from media watch history.
            </summary>
            <param name="entryId">Id of existing media watch entry.</param>
            <returns />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLScreens.Update(UnityEngine.Experimental.XR.MagicLeap.MLScreensWatchHistoryEntry@)">
            <summary>
            Updates media watch entry with default thumbnail.
            </summary>
            <param name="entry">Id of existing media watch entry.</param>
            <returns />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLScreens.Update(UnityEngine.Experimental.XR.MagicLeap.MLScreensWatchHistoryEntry,UnityEngine.Texture2D)">
            <summary>
            Updates media watch entry.
            </summary>
            <param name="entry">Id of existing media watch entry.</param>
            <param name="thumbnailImage">
            Thumbnail image for entry. Format needs to be TextureFormat.RGB24.
            </param>
            <returns />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLScreens.GetEntry(System.Int64,UnityEngine.Experimental.XR.MagicLeap.MLScreensWatchHistoryEntry@)">
            <summary>
            Gets entry from media watch history.
            </summary>
            <param name="id">Id of existing media watch entry.</param>
            <param name="entry">Output entry if successful, unmodified otherwise.</param>
            <returns />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLScreens.GetAllEntries">
            <summary>
            Gets all media watch history entries.
            </summary>
            <returns />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLScreens.ClearAllEntries">
            <summary>
            Clears all media watch history for this app.
            </summary>
            <returns />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLScreens.GetScreensInfo(System.Collections.Generic.List{UnityEngine.Experimental.XR.MagicLeap.MLScreensScreenInfo}@)">
            <summary>
            Gets information for all system saved screens.
            </summary>
            <returns />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLScreens.GetThumbnail(System.Int64,UnityEngine.Texture2D@)">
            <summary>
            Gets previously saved thumbnail for history entry.
            Avoid using this function, and maintain thumbnails
            through app persistent memory instead.
            </summary>
            <param name="entryId" />
            <param name="imageThumbnail" />
            <returns />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerBehavior">
            <summary>
            MLImageTrackerBehavior encapsulates the functionality to track images
            Avoid making references to this behavior from OnApplicationPause
            since the underlying system will likely be disabled.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerBehavior.Image">
            <summary>
            Image that needs to be tracked.
            Do not resize the image, the aspect ratio of the image provided here
            and the printed image should be the same.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerBehavior.IsStationary">
            <summary> Will this image be stationary and unmoving such as a poster on a wall
            or dynamic and moving such as an image on a t-shirt </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerBehavior.AutoUpdate">
            <summary> Should the behavior move this object automatically </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerBehavior.LongerDimensionInSceneUnits">
            <summary> Longer dimension in scene units </summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerBehavior.OnTargetFound">
            <summary>
            Occurs when an existing target data is found. bool value indicates
            whether the tracking is good or unreliable
            </summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerBehavior.OnTargetLost">
            <summary>
            Occurs when the image target is lost
            </summary>
        </member>
        <member name="E:UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerBehavior.OnTargetUpdated">
            <summary>
            This event gets raised whenever a result gets updated for the image target.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerBehavior.OnApplicationPause(System.Boolean)">
            <summary>
            Callback sent to all game objects when the player pauses.
            </summary>
            <param name="pauseStatus">The pause state of the application.</param>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLCameraError">
            <summary>
            Camera errors
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraError.Invalid">
            <summary>
            Invalid state
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraError.Disabled">
            <summary>
            Camera disabled
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraError.DeviceFailed">
            <summary>
            Camera device failed
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraError.ServiceFailed">
            <summary>
            Camera service failed
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraError.CaptureFailed">
            <summary>
            Capture failed
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraError.Unknown">
            <summary>
            Unknown capture error
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLCameraOutputFormat">
            <summary>
            Captured output format
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraOutputFormat.YUV_420_888">
            <summary>
            YUV planar format
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraOutputFormat.JPEG">
            <summary>
            Compressed output stream
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLCameraPlaneInfo">
            <summary>
            Per plane info for captured output
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraPlaneInfo.Width">
            <summary>
            Width of the output image in pixels
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraPlaneInfo.Height">
            <summary>
            Height of the output image in pixels
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraPlaneInfo.Stride">
            <summary>
            Stride of the output image in pixels
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraPlaneInfo.BytesPerPixel">
            <summary>
            Number of bytes used to represent a pixel
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraPlaneInfo.Data">
            <summary>
            Image data
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraPlaneInfo.Size">
            <summary>
            Number of bytes in the image output data
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLCameraOutput">
            <summary>
            Captured output
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraOutput.PlaneCount">
            <summary>
            Number of output image planes:
            1 for compressed output such as JPEG stream,
            3 for separate color component output such as YUV/YCbCr/RGB.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraOutput.Planes">
            <summary>
            Output image plane info.
            The number of output planes is specified by PlaneCount.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraOutput.Format">
            <summary>
            Supported output format specified by MLCameraOutputFormat
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLCameraCaptureType">
            <summary>
            Capture operation type
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraCaptureType.Image">
            <summary>
            To capture an image and save the JPEG-compressed data to a file.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraCaptureType.ImageRaw">
            <summary>
            To capture an image and obtain the JPEG-compressed stream.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraCaptureType.Video">
            <summary>
            To capture a video and save it to a file.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLCameraResultExtras">
            <summary>
            ResultExtras is a structure to encapsulate various indices for a capture result.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraResultExtras.RequestId">
            <summary>
            An integer to index the request sequence that this result belongs to
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraResultExtras.BurstId">
            <summary>
            An integer to index this result inside a request sequence, starting from 0
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraResultExtras.FrameNumber">
            <summary>
            A 64bit integer to index the frame number associated with this result
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraResultExtras.PartialResultCount">
            <summary>
            The partial result count (index) for this capture result
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLCameraResultExtras.VcamTimestampUs">
            <summary>
            VCam exposure timestamp in microseconds (us)
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLCameraDeviceStatusFlag">
            <summary>
            Client can implement polling mechanism to retrieve device status
            and use these masks to view device status.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLCameraCaptureStatusFlag">
            <summary>
            Client can implement polling mechanism to retrieve capture status
            and use these masks to view capture status.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.DataArrayNativeBindings">
            <summary>
            See ml_data_array.h for additional comments
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLDispatcherErrorCode">
            <summary>
            Error code describing the failure state
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLDispatcherErrorCode.None">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLDispatcherErrorCode.CannotStartApp">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLDispatcherErrorCode.InvalidPacket">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLDispatcherErrorCode.NoAppFound">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLDispatcherErrorCode.Internal">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.DispatchApiNativeBindings">
            <summary>
            See ml_dispatch.h for additional comments
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLStaticGestureType">
            <summary>
            Static gesture types which are available when both hands are separated.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLStaticGestureType.Finger">
            <summary>
            One finger.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLStaticGestureType.Fist">
            <summary>
            A closed fist.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLStaticGestureType.Pinch">
            <summary>
            A pinch.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLStaticGestureType.Thumb">
            <summary>
            A closed fist with the thumb pointed up.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLStaticGestureType.L">
            <summary>
            An L shape.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLStaticGestureType.OpenHandBack">
            <summary>
            An open hand with the back of the hand facing the user.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLStaticGestureType.Ok">
            <summary>
            A pinch with all fingers, except the index finger and the thumb, extended out.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLStaticGestureType.C">
            <summary>
            A rounded 'C' alphabet shape.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLStaticGestureType.NoHand">
            <summary>
            No gesture was recognized.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLGestureFilterLevel">
            <summary>
            Amount of filtering for different gesture information.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLGestureFilterLevel.NoFiltering">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLGestureFilterLevel.SomeFiltering">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLGestureFilterLevel.MoreFiltering">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLHandType">
            <summary>
            Index into arrays which contain multiple gesture information.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLHandType.Left">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLHandType.Right">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.GestureApiNativeBindings">
            <summary>
            See ml_gesture.h for additional comments
            </summary>
        </member>
        <member name="F:MagicLeapInternal.GestureApiNativeBindings.StaticGestureTypeCount">
            <summary>
            A constant to represent the total number static gestures.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInvokeFuture">
            <summary>
            MLInvokeFuture represents a type which is opaque (incomplete) to users of this library.
            A pointer to an MLInvokeFuture is returned by the Async function.
            Users pass it to the Wait function to determine if the asynchronous method has
            completed and to retrieve the result if it has.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLIdentityAttributeEnum">
            <summary>
            MLIdentityAttributeEnum identifies an attribute in a user profile.
            Attributes that were not known at the time the library was built, are marked as Unknown.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLIdentityError">
            <summary>
            MLIdentityError is the return type of some of the Identity functions.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityError.Ok">
            <summary>
            The call returned with no error and returned a pointer to a MLIdentityProfile.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityError.FailedToConnectToLocalService">
            <summary>
            The local service is not running, or it cannot be accessed.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityError.FailedToConnectToCloudService">
            <summary>
            The service failed to access the cloud service.
            Either there is no IP connection or the cloud service is not available.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityError.CloudAuthentication">
            <summary>
            The user does not have the required privileges to use the requesting service
            or the refresh token used by the service is invalid.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityError.InvalidInformationFromCloud">
            <summary>
            Signature verification failed on the information returned by the cloud or a
            parsing error occurred.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityError.InvalidArgument">
            <summary>
            A pointer passed to a function was 0 or did not conform with other usage requirements.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityError.AsyncOperationNotComplete">
            <summary>
            A polling function returned false because the asynchronous operation has not completed.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityError.OtherError">
            <summary>
            An error not described by other values occurred.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityError.NotLoggedIn">
            <summary>
            The operation failed because the user is not logged in to the cloud.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityError.ExpiredCredentials">
            <summary>
            The user's credentials have expired.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityError.FailedToGetUserProfile">
            <summary>
            Failed to retrieve attributes of the user's profile.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityError.Unauthorized">
            <summary>
            The cloud rejected the operation because the user is not authorized to execute it.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityError.CertificateError">
            <summary>
            The device failed to authenticate the server.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityError.RejectedByCloud">
            <summary>
            The cloud rejected the operation.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityError.AlreadyLoggedIn">
            <summary>
            The user is already logged in.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityError.ModifyIsNotSupported">
            <summary>
            The cloud does not support modification of an attribute value.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLIdentityError.NetworkError">
            <summary>
            The device is not connected to a network.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.IdentityApiNativeBindings">
            <summary>
            See ml_identity.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.ImageApiNativeBindings">
            <summary>
            See ml_image.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.ImageApiNativeBindings.MLImageType">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImageType.BitMask">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImageType.RGB24">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImageType.RGBA32">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.ImageApiNativeBindings.MLImage">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImage.Width">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImage.Height">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImage.ImageType">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImage.Alignment">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImage.Image">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerTargetSettings">
            <summary>
            Represents the settings of an Image Target
            All fields are required for an Image Target to be tracked.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerTargetSettings.Name">
            <summary>
            Name of the target
            - This name has to be unique across all targets added to the Image Tracker.
            - Caller should allocate memory for this.
            - Encoding should be in UTF8.
            - This will be copied internally.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerTargetSettings.LongerDimension">
            <summary>
            LongerDimension refer to the size of the longer dimension of the physical Image
            Target in Unity scene units..
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerTargetSettings.IsStationary">
            <summary>
            Set this to true to improve detection for stationary targets.
            - An Image Target is a stationary target if its position in the physical
            world does not change.
            - This is best suited for cases where the target is stationary and when the
            local geometry (environment surrounding the target) is planar.
            - When in doubt set this to false.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerTargetSettings.IsEnabled">
            <summary>
            Set this to \c true to track the image target.
            - Disabling the target when not needed marginally improves the tracker CPU
            performance.
            - This is best suited for cases where the target is temporarily not needed.
            If the target no longer needs to be tracked it is best to use remove the
            target.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerImageFormat">
            <summary>
            When adding image targets to the Image Tracker using
            #MLImageTrackerAddTargetFromArraySpecify the image format using this enum. </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerImageFormat.Grayscale">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerImageFormat.RGB">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerImageFormat.RGBA">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.ImageTrackerNativeBindings">
            <summary>
            See ml_image_tracking.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerSettings">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerSettings.MaxSimultaneousTargets">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerSettings.EnableTracker">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerTargetStatus">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerTargetStatus.Tracked">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerTargetStatus.Unreliable">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerTargetStatus.NotTracked">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerTargetStaticData">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerTargetStaticData.CoordFrameTarget">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerTargetResult">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerTargetResult.Status">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerInitSettings(MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerSettings@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerCreate(MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerSettings@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerUpdateSettings(System.UInt64,MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerSettings@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerDestroy(System.UInt64)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerAddTargetFromArray(System.UInt64,UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerTargetSettings@,System.Byte[],System.UInt32,System.UInt32,UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerImageFormat)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerRemoveTarget(System.UInt64,System.UInt64)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerUpdateTargetSettings(System.UInt64,System.UInt64,UnityEngine.Experimental.XR.MagicLeap.MLImageTrackerTargetSettings@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerGetTargetStaticData(System.UInt64,System.UInt64,MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerTargetStaticData@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerGetTargetResult(System.UInt64,System.UInt64,MagicLeapInternal.ImageTrackerNativeBindings.MLImageTrackerTargetResult@)">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureState">
            <summary>
            Gesture state
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureState.End">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureState.Continue">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureState.Start">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureType">
            <summary>
            Recognized touchpad gesture types
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureType.None">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureType.Tap">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureType.ForceTapDown">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureType.ForceTapUp">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureType.ForceDwell">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureType.SecondForceDown">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureType.LongHold">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureType.RadialScroll">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureType.Swipe">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureType.Scroll">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureType.Pinch">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerButton">
            <summary>
            Buttons on device, controller, and Mobile Companion App
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerButton.None">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerButton.Move">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerButton.App">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerButton.Bumper">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerButton.HomeTap">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerType">
            <summary>
            Types of controllers recognized by Magic Leap platform
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerType.None">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerType.Device">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerType.MobileApp">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerDof">
            <summary>
            Degrees-of-freedom mode of controller
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerDof.None">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerDof.Dof3">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerDof.Dof6">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureDirection">
            <summary>
            Direction of touchpad gesture
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.None">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.Up">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.Down">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.Left">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.Right">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.In">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.Out">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.Clockwise">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.CounterClockwise">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED">
            <summary>
            Controller LED pattern
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock1">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock2">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock3">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock4">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock5">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock6">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock7">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock8">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock9">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock10">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock11">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock12">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock1And7">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock2And8">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock3And9">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock4And10">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock5And11">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock6And12">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackEffectLED">
            <summary>
            Feedback effects for LED target.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackEffectLED.RotateCW">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackEffectLED.RotateCCW">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackEffectLED.Pulse">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackEffectLED.PaintCW">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackEffectLED.PaintCCW">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackEffectLED.Blink">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackColorLED">
            <summary>
            Feedback colors for LED target.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackColorLED.Red0">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackColorLED.Red1">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackColorLED.Red2">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackColorLED.Orange0">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackColorLED.Orange1">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackColorLED.Orange2">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackColorLED.Yellow0">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackColorLED.Yellow1">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackColorLED.Yellow2">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackColorLED.Pink0">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackColorLED.Pink1">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackColorLED.Pink2">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackColorLED.Purple0">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackColorLED.Purple1">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackColorLED.Purple2">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackEffectSpeedLED">
            <summary>
            Feedback effect speed for LED target.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackEffectSpeedLED.Slow">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackEffectSpeedLED.Medium">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackEffectSpeedLED.Fast">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternVibe">
            <summary>
            Controller vibration pattern
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.Click">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.Bump">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.DoubleClick">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.Buzz">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.Tick">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.ForceDown">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.ForceUp">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.ForceDwell">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.SecondForceDown">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackIntensity">
            <summary>
            Controller vibration intensity
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackIntensity.Low">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackIntensity.Medium">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackIntensity.High">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings">
            <summary>
            See ml_input.h for additional comments.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture.PosAndForce">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture.Type">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture.Direction">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture.Speed">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture.Distance">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture.FingerGap">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture.Radius">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture.Angle">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnTouchpadGestureStartCallback">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnTouchpadGestureContinueCallback">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnTouchpadGestureEndCallback">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnButtonDownCallback">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnButtonUpCallback">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnConnectCallback">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnDisconnectCallback">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnTouchpadGestureStart">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnTouchpadGestureContinue">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnTouchpadGestureEnd">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnButtonDown">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnButtonUp">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnConnect">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnDisconnect">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputControllerState">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.Orientation">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.Position">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.TouchPosAndForce">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.TriggerNormalized">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.ButtonState">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.IsTouchActive">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.IsConnected">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.TouchpadGesture">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.TouchpadGestureState">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.Type">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.Dof">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.HardwareIndex">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputConfiguration">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputConfiguration.Dof">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputDll">
            <summary>
            ML input DLL name.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MaxControllers">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MaxControllerTouchpadTouches">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.ControllerTouchpadGestureTypeCount">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.ControllerTouchpadGestureDirectionCount">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.ButtonCount">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputCreate(System.IntPtr)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputDestroy(System.UInt64)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputSetControllerCallbacks(System.UInt64,MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks@,System.IntPtr)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputSetControllerCallbacks(System.UInt64,System.IntPtr,System.IntPtr)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputGetControllerState(System.UInt64,System.IntPtr)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputStartControllerFeedbackPatternLED(System.UInt64,System.Byte,UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED,UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackColorLED,System.UInt32)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputStartControllerFeedbackPatternEffectLED(System.UInt64,System.Byte,UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackEffectLED,UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackEffectSpeedLED,UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternLED,UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackColorLED,System.UInt32)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputStartControllerFeedbackPatternVibe(System.UInt64,System.Byte,UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackPatternVibe,UnityEngine.Experimental.XR.MagicLeap.MLInputControllerFeedbackIntensity)">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLLightingTrackingCamera">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLLightingTrackingCamera.Left">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLLightingTrackingCamera.Right">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLLightingTrackingCamera.FarLeft">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLLightingTrackingCamera.FarRight">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.LightingTrackingApiNativeBindings">
            <summary>
            See ml_lighting_tracking.h for additional comments.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.LightingTrackingApiNativeBindings.MLLightingTrackingAmbientGlobalState">
            <summary>
            Information about the ambient light sensor global state.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.LightingTrackingApiNativeBindings.MLLightingTrackingAmbientGlobalState.cameraLuminance">
            <summary>
            Array stores values for each world camera, ordered left, right, far left, far right.
            Luminance estimate is in nits (cd/m^2)
            </summary>
        </member>
        <member name="T:MagicLeapInternal.LightingTrackingApiNativeBindings.MLLightingTrackingColorTemperatureState">
            <summary>
            Information about the color temperature state.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.LightingTrackingApiNativeBindings.MLLightingTrackingColorTemperatureState.colorTemperature">
            <summary>
            Color temperature is in Kelvin
            </summary>
        </member>
        <member name="F:MagicLeapInternal.LightingTrackingApiNativeBindings.CameraCount">
            <summary>
            Number of cameras.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.LightingTrackingApiNativeBindings.MLLightingTrackingCreate">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.LightingTrackingApiNativeBindings.MLLightingTrackingDestroy(System.UInt64)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.LightingTrackingApiNativeBindings.MLLightingTrackingGetAmbientGlobalState(System.UInt64,MagicLeapInternal.LightingTrackingApiNativeBindings.MLLightingTrackingAmbientGlobalState@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.LightingTrackingApiNativeBindings.MLLightingTrackingGetColorTemperatureState(System.UInt64,MagicLeapInternal.LightingTrackingApiNativeBindings.MLLightingTrackingColorTemperatureState@)">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings">
            <summary>
            Defines C# API interface to C-API layer
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.#ctor">
            <summary>
            Define constructor private to prevent instantiation of the class through new
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLSensoryState">
            <summary>
            The current state of a given tracker.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLSensoryState.Initializing">
            <summary>
            The tracker is not ready, don't use the data.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLSensoryState.Ready">
            <summary>
            The tracker's data can be used.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLVec2f">
            <summary>
            2D vector represented with X and Y floats.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLVec3f">
            <summary>
            3D vector in native format.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLQuaternionf">
            <summary>
            Quaternion in native format.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLTransform">
            <summary>
            Information used to transform from one coordinate frame to another.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLTransform.Rotation">
            <summary>
            The rotation of the coordinate frame to apply after the translation.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLTransform.Position">
            <summary>
            The translation to apply to get the coordinate frame in the proper location.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLMat4f">
            <summary>
            4x4 matrix in native format.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLMat4f.matrix_colmajor">
            <summary>
            The 16 matrix values.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLRectf">
            <summary>
            2D rectangle in native format.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRectf.x">
            <summary>The x coordinate.</summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRectf.y">
            <summary>The y coordinate.</summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRectf.w">
            <summary>The width.</summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRectf.h">
            <summary>The height.</summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLRecti">
            <summary>
            2D rectangle with integer values in native format.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRecti.x">
            <summary>The x coordinate.</summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRecti.y">
            <summary>The y coordinate.</summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRecti.w">
            <summary>The width.</summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRecti.h">
            <summary>The height.</summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID">
            <summary>
            A unique identifier which represents a coordinate frame.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID.Equals(System.Object)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID.GetHashCode">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLPerceptionClientDll">
            <summary>
            Perception library name string.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.InvalidHandle">
            <summary>
            The 64 bit id for an invalid native handle.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLHandleIsValid(System.UInt64)">
            <summary>
            Checks if 64 bit handle is valid.
            </summary>
            <returns>
                <c>true</c>, if handle is valid, <c>false</c> if invalid.</returns>
            <param name="handle">The handle to check.</param>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLPerceptionGetSnapshot">
            <summary>
            Returns pointer to the current MLSnapshot structure
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLPerceptionReleaseSnapshot(System.IntPtr)">
            <summary>
            Releases a previously acquired snapshot from MLPerceptionGetSnapshot
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLSnapshotGetTransform(System.IntPtr,MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID@,MagicLeapInternal.MagicLeapNativeBindings.MLTransform@)">
            <summary>
            Releases a previously acquired snapshot from MLPerceptionGetSnapshot
            <param name="snap"> Snapshot acquired through MLPerceptionGetSnapshot </param><param name="id"> Coordinate frame id for which the transform is requested </param><param name="outTransform"> output transform </param></summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceErrorType">
            <summary>
            MusicService Error type
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceErrorType.None">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceErrorType.Connectivity">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceErrorType.Timeout">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceErrorType.GeneralPlayback">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceErrorType.Privilege">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceErrorType.ServiceSpecific">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceErrorType.NoMemory">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceErrorType.Unspecified">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceStatus">
            <summary>
            MusicService status
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceStatus.ContextChanged">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceStatus.Created">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceStatus.LoggedIn">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceStatus.LoggedOut">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceStatus.NextTrack">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceStatus.PrevTrack">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceStatus.TrackChanged">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceStatus.Unknown">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLMusicServicePlaybackOption">
            <summary>
            MusicService playback options
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServicePlaybackOption.Playback">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServicePlaybackOption.Repeat">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServicePlaybackOption.Shuffle">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServicePlaybackOption.Unknown">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLMusicServicePlaybackState">
            <summary>
            MusicService playback state
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServicePlaybackState.Playing">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServicePlaybackState.Paused">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServicePlaybackState.Stop">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServicePlaybackState.Error">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServicePlaybackState.Unknown">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceRepeatState">
            <summary>
            MusicService repeat setting
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceRepeatState.None">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceRepeatState.Song">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceRepeatState.Album">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceRepeatState.Unknown">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceShuffleState">
            <summary>
            MusicService shuffle setting
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceShuffleState.On">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceShuffleState.Off">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceShuffleState.Unknown">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceCallbacks">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceCallbacks.OnPlaybackStateChangeCallback">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceCallbacks.OnRepeatStateChangeCallback">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceCallbacks.OnShuffleStateChangeCallback">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceCallbacks.OnMetadataChangeCallback">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceCallbacks.OnPositionChangeCallback">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceCallbacks.OnErrorCallback">
            <summary />
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceCallbacks.OnStatusChangeCallback">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceCallbacks.OnPlaybackStateChange">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceCallbacks.OnRepeatStateChange">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceCallbacks.OnShuffleStateChange">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceCallbacks.OnMetadataChange">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceCallbacks.OnPositionChange">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceCallbacks.OnError">
            <summary />
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceCallbacks.OnStatusChange">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.MusicServiceNativeBindings">
            <summary>
            See ml_music_service.h for additional comments.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceDLL">
            <summary>
            ML music dll name.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceConnect(System.String)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceDisconnect">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetCallbacks(System.IntPtr)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetAuthString(System.String)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetURL(System.String)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetPlayList(System.String[],System.UInt64)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceStart">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceStop">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServicePause">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceResume">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSeek(System.UInt32)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceNext">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServicePrevious">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetShuffle(UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceShuffleState)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetRepeat(UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceRepeatState)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetVolume(System.Single)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetTrackLength(System.UInt32@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetCurrentPosition(System.UInt32@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetStatus(UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceStatus@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetError(UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceErrorType@,System.Int32@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetPlaybackState(UnityEngine.Experimental.XR.MagicLeap.MLMusicServicePlaybackState@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetRepeatState(UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceRepeatState@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetShuffleState(UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceShuffleState@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetMetadata(UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceMetadata@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceReleaseMetadata(UnityEngine.Experimental.XR.MagicLeap.MLMusicServiceMetadata@)">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.PlanesApiNativeBindings">
            <summary>
            See ml_planes.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.RaycastApiNativeBindings">
            <summary>
            See ml_raycast.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.SecureStorageApiNativeBindings">
            <summary>
            See ml_secure_storage.h for additional comments
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgentError">
            <summary>
            MLTokenAgentError is the return value type of some of the MLTokenAgent functions.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgentError.Ok">
            <summary>
            The function returned with no error.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgentError.FailedToConnectToLocalService">
            <summary>
            The local binder service was not found.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgentError.ServiceNotStarted">
            <summary>
            The local binder service is running but has not been registered by the login service.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgentError.FailedToConnectToCloud">
            <summary>
            The local binder service failed to connect to the cloud service.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgentError.CloudAuthentication">
            <summary>
            The cloud service rejected the request due to inappropriate credentials.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgentError.FailedToLogin">
            <summary>
            The local server failed to log in with the cloud.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgentError.LoginNotBegun">
            <summary>
            An attempt to complete the login was begun without starting the login.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgentError.NotLoggedIn">
            <summary>
            The operation was rejected because the local server was not logged in with the cloud.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgentError.AlreadyLoggedIn">
            <summary>
            The login request failed because the local server is already logged in with the cloud.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgentError.LoginInProgress">
            <summary>
            The login request request failed because a login is already in progress.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgentError.FailedToStartIdentityService">
            <summary>
            Having completed the login process with the cloud successfully, the service failed to
            start the local identity service.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgentError.InvalidArgument">
            <summary>
            The operation failed due to an invalid argument being passed in.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgentError.AsyncOperationNotComplete">
            <summary>
            A polling function returned false because the asynchronous operation has not completed.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgentError.OtherError">
            <summary>
            An error not described by other values occurred.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgentError.DeviceNotRegistered">
            <summary>
            The serial number of the device is not recognized by the cloud so login failed.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLTokenAgentError.DeviceNotConnected">
            <summary>
            The device is not yet connected to the cloud so login failed.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.TokenAgentApiNativeBindings">
            <summary>
            See ml_token_agent.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.EyeApiNativeBindings">
            <summary>
            See ml_eye_tracking.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.ScreensNativeBindings">
            <summary>
            See ml_screens.h for additional comments
            </summary>
        </member>
        <member name="P:MagicLeapInternal.ScreensNativeBindings.MLScreensWatchHistoryEntry.IsValid">
            <summary>
            Entry is valid if:
            * PlaybackPositionMs is smaller or equal to PlaybackDurationMs.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLHeadTrackingError">
            <summary>
            A set of possible error conditions that can cause Head Tracking to
            be less than ideal.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLHeadTrackingError.None">
            <summary>
            No error, tracking is nominal.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLHeadTrackingError.Featureless">
            <summary>
            There are not enough features in the environment.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLHeadTrackingError.LowLight">
            <summary>
            Lighting in the environment is not sufficient to track accurately.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLHeadTrackingError.DynamicScene">
            <summary>
            There is too much movement in the environment.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLHeadTrackingError.DynamicMotion">
            <summary>
            Head motion is too fast to track accurately.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLHeadTrackingMode">
            <summary>
            A set of possible tracking modes the Head Tracking system can be in.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLHeadTrackingMode.Mode6DOF">
            <summary>
            Full 6 degrees of freedom tracking (position and orientation).
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLHeadTrackingMode.Mode3DOF">
            <summary>
            Limited 3 degrees of freedom tracking (orientation only).
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MLHeadTrackingState">
            <summary>
            A structure containing information on the current state of the
            Head Tracking system.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLHeadTrackingState.Mode">
            <summary>
            What tracking mode the Head Tracking system is currently in.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLHeadTrackingState.Confidence">
            <summary>
            WARNING: Currently always returns 1.
            A confidence value (from 0..1) representing the confidence in the
            current pose estimation.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MLHeadTrackingState.Error">
            <summary>
            WARNING: Currently always returns None.
            Represents what tracking error (if any) is present.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.HeadApiNativeBindings">
            <summary>
            See ml_head_tracking.h for additional comments.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.DataArrayUtils">
            <summary>
            Class containing utility functions to convert low level data stream into Unity specific data structures
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.DataArrayUtils.GetStreamAsVector3Array(MagicLeapInternal.DataArrayNativeBindings.MLDataArray.Stream,System.Boolean)">
            <summary>
            Gets the data as an array of Vector3.  The underlying data must be XYZ or None.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.DataArrayUtils.GetStreamAsULongArray(MagicLeapInternal.DataArrayNativeBindings.MLDataArray.Stream)">
            <summary>
            Gets the data as an array of unsigned longs. The underlying data must be Handles.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.DataArrayUtils.GetStreamAsUIntArray(MagicLeapInternal.DataArrayNativeBindings.MLDataArray.Stream)">
            <summary>
            Gets the data as an array of unsigned ints.  The underlying data must be UInt, or None.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.DataArrayUtils.GetStreamAsIntArray(MagicLeapInternal.DataArrayNativeBindings.MLDataArray.Stream)">
            <summary>
            Gets the data as an array of signed ints.  The underlying data must be UInt.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.DataArrayUtils.GetStreamAsFloatArray(MagicLeapInternal.DataArrayNativeBindings.MLDataArray.Stream)">
            <summary>
            Gets the data as an array of floats.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.DataArrayUtils.GetStreamAsULongHashSet(MagicLeapInternal.DataArrayNativeBindings.MLDataArray.Stream)">
            <summary>
            Gets the data as an array of unsigned longs. The underlying data must be Handles.
            </summary>
        </member>
        <member name="T:UnityEngine.Experimental.XR.MagicLeap.MagicLeapDevice">
            <summary>
            MagicLeap device class responsible for updating all trackers when they register and are enabled.
            </summary>
        </member>
        <member name="F:UnityEngine.Experimental.XR.MagicLeap.MagicLeapDevice.MAGIC_LEAP_DEVICE_NAME">
            <summary />
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MagicLeapDevice.WorldScale">
            <summary>
            The last scale assigned from the main camera's parent
            </summary>
        </member>
        <member name="P:UnityEngine.Experimental.XR.MagicLeap.MagicLeapDevice.HeadTrackingState">
            <summary />
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MagicLeapDevice.Awake">
            <summary>
            Initializes the Magic Leap device state.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MagicLeapDevice.OnEnable">
            <summary>
            Subscribes to Unity events necessary for the device's operation.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MagicLeapDevice.OnDisable">
            <summary>
            Cleans up event subscriptions that are no longer necessary.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MagicLeapDevice.OnDestroy">
            <summary>
            Cleans up any resources the object has open.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MagicLeapDevice.Update">
            <summary>
            Updates the percenption snapshot and emits an event to inform subscribers of the updated state.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MagicLeapDevice.IsReady">
            <summary>
            Check if underlying Unity VR Device setup is ready
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MagicLeapDevice.Register(System.Action{System.Single,System.IntPtr})">
            <summary>
            Register a MagicLeap API Update callback to be called on Update of this MonoBehavior.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MagicLeapDevice.Unregister(System.Action{System.Single,System.IntPtr})">
            <summary>
            Unregister a previously registered MagicLeap API Update callback.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MagicLeapDevice.RegisterHeadTrackingModeChanged(System.Action{UnityEngine.Experimental.XR.MagicLeap.MLHeadTrackingState})">
            <summary>
            Registers a callback to be called when only rotation head pose is available,
            or when full head pose is available again.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MagicLeapDevice.UnregisterHeadTrackingModeChanged(System.Action{UnityEngine.Experimental.XR.MagicLeap.MLHeadTrackingState})">
            <summary>
            Unregisters a previously registered head tracking mode change callback.
            </summary>
        </member>
        <member name="M:UnityEngine.Experimental.XR.MagicLeap.MagicLeapDevice.UpdateWorldScale">
            <summary>
            Apply the world scale set on the current main camera's parent.
            </summary>
            <returns>
            True if the scale was set false if the main camera or main camera parent was not found.
            </returns>
        </member>
        <member name="T:MagicLeapInternal.MLConvert">
            <summary>
            Utility class used for converting vectors and matrices between native and unity format.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUnity(System.Single)">
            <summary>
            Gets a float value converted from meters to Unity units.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUnity(MagicLeapInternal.MagicLeapNativeBindings.MLVec3f,System.Boolean,System.Boolean)">
            <summary>
            Creates a Unity 3D vector from a native vector.
            </summary>
            <param name="vec">A native vector.</param>
            <param name="transformToRUF">(Optional) If false, prevents conversion to Unity's coordinate system.</param>
            <param name="applyScale">(Optional) If false, prevents scaling to Unity's unit per meter scale.</param>
            <returns>A Unity vector.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUnity(System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Creates a Unity 3D vector from a x, y and z parameters.
            </summary>
            <param name="x">X component</param>
            <param name="y">Y component</param>
            <param name="z">Z component</param>
            <param name="transformToRUF">(Optional) If false, prevents conversion to Unity's coordinate system.</param>
            <param name="applyScale">(Optional) If false, prevents scaling to Unity's unit per meter scale.</param>
            <returns>A Unity vector.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUnity(MagicLeapInternal.MagicLeapNativeBindings.MLQuaternionf,System.Boolean)">
            <summary>
            Creates a Unity quaternion from a native vector.
            </summary>
            <param name="quat">A native quaternion.</param>
            <param name="transformToRUF">(Optional) If false, prevents conversion to Unity's coordinate system.</param>
            <returns>A Unity quaternion.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUnity(MagicLeapInternal.MagicLeapNativeBindings.MLMat4f)">
            <summary>
            Creates Unity 4x4 matrix from native matrix.
            </summary>
            <param name="mat">A native matrix.</param>
            <returns>A Unity matrix.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUnity(MagicLeapInternal.MagicLeapNativeBindings.MLTransform,System.Boolean,System.Boolean)">
            <summary>
            Creates Unity 4x4 matrix from native transform.
            </summary>
            <param name="transform">A native transform.</param>
            <param name="transformToRUF">(Optional) If false, prevents conversion to Unity's coordinate system.</param>
            <param name="applyScale">(Optional) If false, prevents scaling to Unity's unit per meter scale.</param>
            <returns>A Unity matrix.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.FromUnity(UnityEngine.Matrix4x4,System.Boolean,System.Boolean)">
            <summary>
            Creates native transform from a Unity matrix.
            </summary>
            <param name="mat">A Unity matrix.</param>
            <param name="transformFromRUF">(Optional) If false, prevents conversion to the native SDK coordinate system.</param>
            <param name="applyScale">(Optional) If false, prevents scaling to the native SDK's unit per meter scale.</param>
            <returns>A native transform.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.FromUnity(UnityEngine.Matrix4x4,System.Single[]@)">
            <summary>
            Fills out array with values from 4x4 Unity matrix.
            </summary>
            <param name="mat">An input native matrix.</param>
            <param name="matrixColMajor">An array to populate in Unity format.</param>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.FromUnity(UnityEngine.Vector3,System.Boolean,System.Boolean)">
            <summary>
            Creates native 3d vector from a Unity vector.
            </summary>
            <param name="vec">A Unity vector.</param>
            <param name="transformFromRUF">(Optional) If false, prevents conversion to the native SDK coordinate system.</param>
            <param name="applyScale">(Optional) If false, prevents scaling to the native SDK's unit per meter scale.</param>
            <returns>A native vector.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.FromUnity(UnityEngine.Quaternion,System.Boolean)">
            <summary>
            Creates native quaternion from a Unity quaternion.
            </summary>
            <param name="quat">A Unity quaternion.</param>
            <param name="transformFromRUF">(Optional) If false, prevents conversion to the native SDK coordinate system.</param>
            <returns>A native quaternion.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.FromUnity(System.Single)">
            <summary>
            Gets a float value converted from Unity units to meters.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.FloatsToMat(System.Single[])">
            <summary>
            Creates Unity 4x4 matrix from an array of 16 floats.
            </summary>
            <param name="vals">An array of 16 floats.</param>
            <returns>A Unity matrix.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.GetPositionFromTransformMatrix(UnityEngine.Matrix4x4)">
            <summary>
            Gets the position vector stored in a transform matrix.
            </summary>
            <param name="transformMatrix">A Unity matrix treated as a transform matrix.</param>
            <returns>A Unity vector representing a position.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.GetRotationFromTransformMatrix(UnityEngine.Matrix4x4)">
            <summary>
            Gets the rotation quaternion stored in a transform matrix.
            </summary>
            <param name="transformMatrix">A Unity matrix treated as a transform matrix.</param>
            <returns>A Unity quaternion.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUTF8Snipped(System.String,System.Int32)">
            <summary>Take a string, snips it to a desired length and converts it to UTF8.</summary>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.DecodeAscii(System.Byte[])">
            <summary>Decodes a buffer of bytes into an Ascii string.</summary>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.DecodeUTF8(System.Byte[])">
            <summary>Decodes a buffer of bytes into a UTF8 string.</summary>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.EncodeToUnmanagedUTF8(System.String)">
            <summary>
            Converts a managed string into an unmanaged null terminated UTF-8 string.
            </summary>
            <param name="s">The managed string to convert</param>
            <returns>A pointer to the unmanaged string</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.DecodeUTF8(System.IntPtr)">
            <summary>
            Converts an unmanaged null terminated UTF-8 string into a managed string.
            </summary>
            <param name="nativeString">The unmanaged string to convert</param>
            <returns>A managed string</returns>
        </member>
        <member name="T:MagicLeapInternal.MLTextureUtils">
            <summary>
            Class containing utility functions to convert Unity Texture to Lumin OS compatible data structures.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MLTextureUtils.CovertToRGBAByteArray(UnityEngine.Texture2D)">
            <summary>
            Convert Unity Texture2D to a byte array.
            The byte array will store pixels in RGBA format and the origin will be top left corner.
            </summary>
        </member>
    </members>
</doc>
